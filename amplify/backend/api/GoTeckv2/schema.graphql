type CartProduct @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  Product: Product @hasOne
  cartID: ID! @index(name: "byCart")
}

type OrderProduct @model @auth(rules: [{allow: public}]) {
  id: ID!
  quantity: Int!
  Product: Product @hasOne
  orderID: ID! @index(name: "byOrder")
}

enum TransportationModes {
  DRIVING
  BICYCLING
}

type Courier @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  sub: String!
  lat: Float
  lng: Float
  transportationMode: TransportationModes!
}

type Cart @model @auth(rules: [{allow: public}]) {
  id: ID!
  shopID: ID! @index(name: "byShop")
  userID: ID! @index(name: "byUser")
  CartProducts: [CartProduct] @hasMany(indexName: "byCart", fields: ["id"])
}

enum OrderStatus {
  NEW
  COOKING
  READY_FOR_PICKUP
  PICKED_UP
  COMPLETED
  ACCEPTED
}

type Order @model @auth(rules: [{allow: public}]) {
  id: ID!
  total: Float!
  status: OrderStatus!
  userID: ID! @index(name: "byUser")
  Shop: Shop @hasOne
  OrderProducts: [OrderProduct] @hasMany(indexName: "byOrder", fields: ["id"])
  Courier: Courier @hasOne
}

type User @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  address: String!
  lat: Float!
  lng: Float!
  sub: String!
  Orders: [Order] @hasMany(indexName: "byUser", fields: ["id"])
  Carts: [Cart] @hasMany(indexName: "byUser", fields: ["id"])
}

type Product @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String
  description: String
  shortDescription: String
  price: Float!
  shopID: ID! @index(name: "byShop")
}

type Shop @model @auth(rules: [{allow: public}]) {
  id: ID!
  name: String!
  image: String!
  deliveryFee: Float
  minDeliveryTime: Int
  maxDeliveryTime: Int
  rating: Float
  address: String!
  lat: Float!
  lng: Float
  Products: [Product] @hasMany(indexName: "byShop", fields: ["id"])
  Carts: [Cart] @hasMany(indexName: "byShop", fields: ["id"])
}
 